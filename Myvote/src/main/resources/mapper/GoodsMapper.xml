<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.yc.darry.mapper.GoodsMapper">

	<sql id="getAllGood">
		select g.*,p.paramterid,p.pcarat,p.psize,p.gcrystal,p.gcutting,p.pprice,p.pcount from goods g,paramter p where g.goodid=p.goodid and gother='求婚钻戒'
	</sql>
	<!-- 查询商品下面的所有参数 -->
	<resultMap type="Good" id="GoodMap">
		<id column="goodid" property="goodid"/>
		<result property="gname" column="gname"/>
		<result property="gmaterial" column="gmaterial"/>
		<result property="gimage" column="gimage"/>
		<result property="averagescore" column="averagescore"/>
		<result property="gother" column="gother"/>
		<result property="goodnum" column="goodnum"/>
		<result property="usercount" column="usercount"/>
		<result property="comcount" column="comcount"/>
		<result property="seriesname" column="seriesname"/>
		<result property="stylename" column="stylename"/>
		
		<collection property="paramters" column="paramterid" ofType="Paramter">
					<id property="paramterid" column="paramterid"/>
					<result property="pcarat" column="pcarat"/>
					<result property="psize" column="psize"/>
					<result property="gcrystal" column="gcrystal"/>
					<result property="gcutting" column="gcutting"/>
					<result property="pprice" column="pprice"/>
					<result property="pcount" column="pcount"/>
		</collection>
					
	</resultMap>
	
	<select id="getGoodsById" resultMap="GoodMap">
		<include refid="getAllGood"/> and g.goodid=#{goodid}
		<if test="pcarat!=''">
			and p.pcarat=#{pcarat}
		</if>
	</select>
	<!-- end -->
	
	<!-- 前台查询所有商品SQL -->
	<select id="getGoods" resultType="Good">
		select g.*,p.paramterid,s.seriesname,sy.stylename,p.pcarat,p.psize,p.gcrystal,p.gcutting,p.pprice,p.pcount from goods g,seriesstyle ss,series s,style sy , paramter p where g.goodid=p.goodid and g.goodid=ss.goodid and ss.seriesid=s.seriesid and ss.styleid=sy.styleid 
	</select>
	
	
	<!-- 后台查询所有SQL -->
	<select id="getParamterById" resultType="Paramter" parameterType="int">
		select * from paramter where goodid=#{goodid} 
	</select>
	<!-- 嵌套结果的分页处理 -->
	<resultMap type="Pagination" id="PaginationMap">
		<id column="pagesize" property="pagesize" />
		<result column="pagenum" property="pagenum" />
		<result column="totalSize" property="totalSize" />
		<collection property="goods" column="goodid" ofType="Good">
			<id column="goodid" property="goodid" />
			<result property="gname" column="gname" />
			<result property="gmaterial" column="gmaterial" />
			<result property="gimage" column="gimage" />
			<result property="averagescore" column="averagescore" />
			<result property="gother" column="gother" />
			<result property="goodnum" column="goodnum" />
			<result property="usercount" column="usercount" />
			<result property="comcount" column="comcount" />
			<result property="gprice" column="gprice" />
		</collection>
	</resultMap>
	<select id="getGoodByPage" resultMap="PaginationMap" parameterType="Pagination">
		select(select count(1) from goods where gother='求婚钻戒' 
		<if test="min!=0">
			and gprice>=#{min}
		</if>
		<if test="max!=0">
			and #{max}>=gprice
		</if>
		<if test="seriesname!=null">
			and gname like '%'||#{seriesname}||'%'
		</if>
		) totalSize, ${pagesize} pagesize, ${pagenum}
		pagenum, nn.* from (select n.*, rownum rn from
		(select * from goods where gother='求婚钻戒' 
		<if test="min!=0">
			and gprice>=#{min}
		</if>
		<if test="max!=0">
			and #{max}>=gprice
		</if>
		<if test="seriesname!=null">
			and gname like '%'||#{seriesname}||'%'
		</if>
		 order by goodid) n where ${pagesize} * ${pagenum} >= rownum)
		nn where rn > ${pagesize} * (${pagenum} - 1)
	</select>
	<!-- 分页end -->
	
	<insert id="addGoods" parameterType="Good" >
   		 <selectKey keyColumn="goodid" keyProperty="goodid" resultType="int" order="BEFORE">
   		 	select seq_goods_id.nextval goodid from dual
   		 </selectKey>
   		 insert into goods values(#{goodid},#{gname},#{gmaterial},#{gimage},0.0,0,0,0,#{gother},#{gprice})
   	</insert>
   	<!-- 添加数据end -->
   	<update id="updateGoods" parameterType="Good">
	   	<!-- prefix:添加前缀字符串
	   		prefixOverrides:去掉的前缀字符串
	   		suffix：添加后缀字符换
	   		suffixOverrides：去掉的后缀字符串
	   	 -->
	   	 <trim prefix="update goods set " suffix="where goodid=#{goodid}">
				<if test="gname!=null">
	   				gname= #{gname} 
	   			</if>
	   			<if test="gmaterial!=null">
	   				,gmaterial=#{gmaterial} 
	   			</if>
	   			<if test="gimage!=null">
	   				,gimage=#{gimage} 
	   			</if>
	   			<if test="gother!=null">
	   				,gother=#{gother} 
	   			</if>
	   			<if test="gprice!=0">
	   				,gprice=#{gprice} 
	   			</if>
	   	 </trim>
   	</update>
   	<!-- 更新数据end  -->
   	<delete id="deleteGoods" parameterType="int" >
			delete from goods where goodid = #{goodid}
	</delete>
	<!-- 删除数据end  -->
</mapper>
